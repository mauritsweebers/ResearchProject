Unified Command Protocol ‚Äì Full Lifecycle Control
Version: 2.5
Issued by: Project Command

------------------------------------------------------------
PURPOSE

This protocol governs the lifecycle of all phases and modules:
- Directives and tasking
- Output auditing and synchronization
- QA and enhancement cycles
- Narrative generation
- Phase closure authorization

It supersedes all earlier versions.

------------------------------------------------------------
ACTIVATION

Active throughout all phases. Triggered by:
1. Start of new module
2. Declaration of module or phase completion

------------------------------------------------------------
SECTION 1: MODULE EXECUTION FLOW

1. Command issues directive
2. Phase Chat executes and submits outputs with metadata
3. Command audits:
   ‚úÖ Structural integrity
   ‚úÖ Content scope
   ‚úÖ Index registration
4. Sync check executed (folder upload vs. register)
5. If compliant, proceed to next module or phase QA

------------------------------------------------------------
SECTION 2: PHASE COMPLETION FLOW

When all modules in a phase are complete:

1Ô∏è‚É£ Finish All Modules  
- All required DT, TX, FG are present  
- Outputs stored correctly in SSOT

2Ô∏è‚É£ First Sync Check  
- Phase folder uploaded  
- Command compares all files vs. Master Index Register

3Ô∏è‚É£ QA and Coverage Optimization  
- Command performs output balance review  
- Identifies missing types, thematic gaps, weak visuals  
- Builds action plan

4Ô∏è‚É£ Backfill Implementation  
- Prompts issued to Phase Chat  
- New outputs indexed

5Ô∏è‚É£ Second Sync Check  
- Re-upload of corrected SSOT folder  
- Command re-audits file presence and alignment

6Ô∏è‚É£ Final QA Loop  
- If new issues arise, return to step 3  
- If resolved, proceed to close

7Ô∏è‚É£ Closure Request  
- Command prepares draft synthesis  
- Presents it in **plaintext with formatting and tables** in the terminal for human use (e.g., Mac Pages)
- Asks for final approval

üìå No phase can close until Command explicitly verifies structural, narrative, and reference-level readiness.

------------------------------------------------------------
SECTION 3: OUTPUT FORMAT RULE

üìÑ Narrative syntheses (e.g., Phase0_DraftNarrative_Synthesis.txt) must:
‚úÖ Be stored in `/ssot/phaseX/`
‚úÖ Be displayed in full formatted form in terminal upon generation
‚úÖ Include tables and sectioning for human copy-paste into editors

------------------------------------------------------------
SECTION 4: LOGS AND REFERENCES

Command tracks:
- QA actions in `PhaseX_QA_Log.csv`
- All core sources in `PhaseX_MasterSourceList.csv`

Both exported only once per phase at final QA closure
Files live in `/ssot/phaseX/`

------------------------------------------------------------
SECTION 5: TRANSITION AUTHORITY

Only Command may:
- Close a phase
- Initiate a new one
- Sign off on final QA and sync

Phase teams execute, submit, and comply with protocol.

