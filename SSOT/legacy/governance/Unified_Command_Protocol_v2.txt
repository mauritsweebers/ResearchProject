Unified Command Protocol ‚Äì Module Tasking, Auditing, and Transition
Version: 2.0
Issued by: Project Command

------------------------------------------------------------
PURPOSE

This protocol governs how Command:
- Issues module directives
- Audits phase outputs
- Controls transition between modules
- Ensures traceability, discipline, and consistency across the project lifecycle

It supersedes all earlier versions.

------------------------------------------------------------
ACTIVATION

This protocol is active in all project phases. It is triggered when:
1. A module reaches declared completion, OR
2. Command issues a new research directive

------------------------------------------------------------
SECTION 1: TASK INITIATION (COMMAND-ONLY)

Only Command may initiate a module. Each directive must include:
- Module number and title
- Objectives and scope
- Required outputs (DT, TX, FG, etc.)
- Prompt to copy into Phase Chat
- Storage structure and file naming rules

üìå Phase Chats may not begin unprompted research.

------------------------------------------------------------
SECTION 2: PHASE CHAT LIMITATIONS

Phase Chats are evidence-producing units.
They must:
‚úÖ Execute only Command-issued prompts
‚úÖ Use approved sources (üü¢ A, üü° B with traceability)
‚úÖ Submit all outputs with correct metadata
‚úÖ Store files in correct SSOT folders
‚úÖ Verify all file download links are functional

They must not:
‚ùå Draw conclusions
‚ùå Propose alternative tasks
‚ùå Synthesize across modules
‚ùå Skip file registration or submit unindexed work

------------------------------------------------------------
SECTION 3: MODULE COMPLETION DECLARATION

When a Phase team declares a module complete:
1. Command immediately requests a module folder upload (.zip or structure)
2. No transition occurs until audit is complete

------------------------------------------------------------
SECTION 4: MODULE COMPLETION AUDIT (BY COMMAND)

Command performs full audit in two layers:

‚úÖ STRUCTURAL INTEGRITY
- All expected files are present
- All file names match their index codes
- Files are stored in correct /data/, /outputs/, etc.
- No corrupted, missing, or misnamed files

‚úÖ CONTENT RELEVANCE
- Outputs match the scope of the directive
- Each DT, TX, FG addresses the appropriate systemic question
- Visuals correspond to the data
- Sources are appropriate (institutional/peer-reviewed)

üìå The Master Index Register is verified for each entry.

------------------------------------------------------------
SECTION 5: MODULE STATUS ASSIGNMENT

Command assigns one status:
‚úÖ COMPLETE ‚Äì All tasks met and files registered
‚ö†Ô∏è CONDITIONALLY COMPLETE ‚Äì Minor issues noted but module can advance
‚ùå INCOMPLETE ‚Äì Missing files, structure errors, or relevance gaps

All status declarations are recorded in Command logs.

------------------------------------------------------------
SECTION 6: TRANSITION TO NEXT MODULE

Once a module is approved:
- Command drafts and issues the next full directive
- Includes a copy-paste-ready prompt for Phase Chat
- References prior outputs if relevant

------------------------------------------------------------
SECTION 7: GOVERNANCE FILES

Command ensures that:
- All protocols are stored in /ssot/governance/
- The Master Index Register is updated with every task
- Submission templates and SSOT rules are current and consistent

------------------------------------------------------------
COMPLIANCE

All teams are bound by this protocol.
Command retains authority over task structure, sequencing, and validation.
